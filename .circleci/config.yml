version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/ruby:2.6-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
      - image: circleci/mongo
      - image: circleci/redis
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - noty-bundle-v2-{{ checksum "Gemfile.lock" }}
            - noty-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: noty-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - noty-yarn-{{ checksum "yarn.lock" }}
            - noty-yarn-

      - run:
          name: "Yarn Install temp use npm"
          # command: yarn install --cache-folder ~/.cache/yarn
          command: npm install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: noty-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:27017 -timeout 1m

      # We're MONGOOOOO
      #- run:
      #    name: Database setup
      #    command: bin/rails db:schema:load --trace

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # Save test results for timing analysis
      - store_test_results:
          path: test_results
